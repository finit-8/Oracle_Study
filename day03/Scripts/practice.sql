CREATE TABLE DEPARTMENT(
	DEPARTMENT_NAME VARCHAR2(255) NOT NULL,
	AVG_SALARY NUMBER
);

SELECT * FROM DEPARTMENT;

INSERT INTO DEPARTMENT
VALUES('EXECUTIVE', 19333.33);
INSERT INTO DEPARTMENT
VALUES('ACCOUNTING', 10154.00);
INSERT INTO DEPARTMENT
VALUES('PUBLIC RELATIONS', 10000.00);
INSERT INTO DEPARTMENT
VALUES('MARKETING', 9500.00);
INSERT INTO DEPARTMENT
VALUES('SALES', 8955.88);
INSERT INTO DEPARTMENT
VALUES('FINANCE', 8601.33);

SELECT DEPARTMENT_NAME, FLOOR(AVG_SALARY)
FROM DEPARTMENT
WHERE AVG_SALARY >= 8000
ORDER BY AVG_SALARY DESC;






CREATE TABLE EMPLOYEES(
	NAME VARCHAR2(255),
	MANEGER_NAME VARCHAR2(255)
);
CREATE TABLE MANEGERS(
	NAME VARCHAR2(255),
	EMPLOYEE_NAME VARCHAR2(255)
);
INSERT INTO EMPLOYEES
VALUES('STEVE', '');
INSERT INTO EMPLOYEES
VALUES('NINA', 'STEVE');
INSERT INTO EMPLOYEES
VALUES('ALEX', 'STEVE');
INSERT INTO EMPLOYEES
VALUES('SEM', 'ALEX');
INSERT INTO EMPLOYEES
VALUES('MINSU', 'ALEX');

INSERT INTO MANEGERS
VALUES('', 'STEVE');
INSERT INTO MANEGERS
VALUES('STEVE', 'NINA');
INSERT INTO MANEGERS
VALUES('STEVE', 'ALEX');
INSERT INTO MANEGERS
VALUES('ALEX', 'SEM');
INSERT INTO MANEGERS
VALUES('ALEX', 'MINSU');

SELECT * FROM EMPLOYEES;
SELECT * FROM MANEGERS;
DROP TABLE EMPLOYEES;
DROP TABLE MANEGERS;

SELECT E.NAME 직원, NVL(M.NAME, 'CEO') 매니저
FROM EMPLOYEES E
	LEFT JOIN MANEGERS M
	ON E.NAME = M.EMPLOYEE_NAME;



-- 부서 테이블
CREATE SEQUENCE SEQ_DEPARTMENT;
CREATE TABLE DEPARTMENT (
    DEPT_ID      NUMBER        CONSTRAINT PK_DEPARTMENT PRIMARY KEY,
    DEPT_NAME    VARCHAR2(100) NOT NULL
);

-- 직원 테이블
CREATE SEQUENCE SEQ_EMPLOYEE;
CREATE TABLE EMPLOYEE (
    EMP_ID       NUMBER        CONSTRAINT PK_EMPLOYEE PRIMARY KEY,
    EMP_NAME     VARCHAR2(100) NOT NULL,
    HIRE_DATE    DATE          NOT NULL,
    DEPT_ID      NUMBER        NOT NULL,
    CONSTRAINT FK_EMP_DEPT FOREIGN KEY (DEPT_ID)
        REFERENCES DEPARTMENT(DEPT_ID)
);

INSERT INTO DEPARTMENT
VALUES(1, 'ADMINISTRATION');
INSERT INTO DEPARTMENT
VALUES(SEQ_DEPARTMENT.NEXTVAL, 'ACCOUNTING');
INSERT INTO DEPARTMENT
VALUES(SEQ_DEPARTMENT.NEXTVAL, 'PURCHASING');
INSERT INTO DEPARTMENT
VALUES(SEQ_DEPARTMENT.NEXTVAL, 'HUMAN RESOURCES');

SELECT * FROM DEPARTMENT;
SELECT * FROM EMPLOYEE;
DROP TABLE DEPARTMENT;
DROP TABLE EMPLOYEE;

INSERT INTO EMPLOYEE 
VALUES(
		SEQ_EMPLOYEE.NEXTVAL, 
		'STEVE', 
		'2002-05-19', 
		(SELECT DEPT_ID FROM DEPARTMENT WHERE DEPT_NAME = 'ADMINISTRATION')
);
INSERT INTO EMPLOYEE 
VALUES(
		SEQ_EMPLOYEE.NEXTVAL, 
		'NINA', 
		'2005-05-19', 
		(SELECT DEPT_ID FROM DEPARTMENT WHERE DEPT_NAME = 'ACCOUNTING')
);
INSERT INTO EMPLOYEE 
VALUES(
		SEQ_EMPLOYEE.NEXTVAL, 
		'SEM', 
		'2008-03-19', 
		(SELECT DEPT_ID FROM DEPARTMENT WHERE DEPT_NAME = 'ACCOUNTING')
);
INSERT INTO EMPLOYEE 
VALUES(
		SEQ_EMPLOYEE.NEXTVAL, 
		'JOE', 
		'2002-05-19', 
		(SELECT DEPT_ID FROM DEPARTMENT WHERE DEPT_NAME = 'HUMAN RESOURCES')
);
INSERT INTO EMPLOYEE 
VALUES(
		SEQ_EMPLOYEE.NEXTVAL, 
		'JAMES', 
		'2009-05-19', 
		(SELECT DEPT_ID FROM DEPARTMENT WHERE DEPT_NAME = 'HUMAN RESOURCES')
);
INSERT INTO EMPLOYEE 
VALUES(
		SEQ_EMPLOYEE.NEXTVAL, 
		'SIMSON', 
		'2018-05-19', 
		(SELECT DEPT_ID FROM DEPARTMENT WHERE DEPT_NAME = 'PURCHASING')
);

SELECT DEPT_NAME 부서명, COUNT(EMP_ID) 인원수 
FROM DEPARTMENT D
	JOIN EMPLOYEE E
	ON D.DEPT_ID = E.DEPT_ID
WHERE E.HIRE_DATE < '2005-12-31'
GROUP BY DEPT_NAME;














CREATE TABLE EMPLOYEE (
    EMPLOYEE_ID INT PRIMARY KEY,
    EMPLOYEE_NAME VARCHAR(50) NOT NULL,
    MANEGER_ID INT NULL
);

-- 최상위 보스 (매니저 없음)
INSERT INTO EMPLOYEE VALUES (1, 'CEO', NULL);

-- CEO 밑의 임원들
INSERT INTO EMPLOYEE VALUES (2, '이사 김', 1);
INSERT INTO EMPLOYEE VALUES (3, '이사 박', 1);

-- 이사 김 밑의 팀장들
INSERT INTO EMPLOYEE VALUES (4, '팀장 최', 2);
INSERT INTO EMPLOYEE VALUES (5, '팀장 정', 2);

-- 이사 박 밑의 팀장
INSERT INTO EMPLOYEE VALUES (6, '팀장 윤', 3);

-- 팀장 밑의 일반 직원들
INSERT INTO EMPLOYEE VALUES (7, '사원 이', 4);
INSERT INTO EMPLOYEE VALUES (8, '사원 박', 5);

INSERT INTO EMPLOYEE VALUES (9, '사원 조', 6);

-- 매니저 없는 독립 직원
INSERT INTO EMPLOYEE VALUES (10, '프리랜서 홍', NULL);



SELECT E.EMPLOYEE_NAME 직원, 	
	CASE
		WHEN M.EMPLOYEE_NAME IS NULL THEN '직속상사없음' 
		ELSE M.EMPLOYEE_NAME
		END AS 매니저,
--		NVL(M.EMPLOYEE_NAME, '직속상사없음') 매니저,
		NVL(MM.EMPLOYEE_NAME, '최상위 매니저') "매니저의 매니저"
FROM EMPLOYEE E
	LEFT JOIN EMPLOYEE M ON E.MANEGER_ID = M.EMPLOYEE_ID
	LEFT JOIN EMPLOYEE MM ON M.MANEGER_ID = MM.EMPLOYEE_ID;


