-- 막조인, 비등가조인
SELECT *
FROM TBL_BUYER, TBL_ORDER;


-- OUTER 조인
CREATE TABLE TBL_EMPLOYEE(
	ID NUMBER CONSTRAINT PK_EMPLOYEE PRIMARY KEY,
	EMPLOYEE_NAME VARCHAR2(255)
);

CREATE TABLE TBL_INCOME(
	ID NUMBER CONSTRAINT PK_INCOME PRIMARY KEY,
	INCOME NUMBER,
	INCOME_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	EMPLOYEE_ID NUMBER,
	CONSTRAINT FK_INCOME_EMPLOYEE FOREIGN KEY(EMPLOYEE_ID)
	REFERENCES TBL_EMPLOYEE(ID)
);

INSERT INTO TBL_EMPLOYEE
VALUES(1, '홍길동');
INSERT INTO TBL_EMPLOYEE
VALUES(2, '장보고');
INSERT INTO TBL_EMPLOYEE
VALUES(3, '이순신');

INSERT INTO TBL_INCOME(ID, INCOME, EMPLOYEE_ID)
VALUES(1, 100000, 1);
INSERT INTO TBL_INCOME(ID, INCOME, EMPLOYEE_ID)
VALUES(2, 150000, 1);

SELECT * FROM TBL_EMPLOYEE ;
SELECT * FROM TBL_INCOME ;

-- OUTER 조인	
-- FROM절이 LEFT 테이블로 보고
-- JOIN절을 RIGHT 테이블로 본다.
SELECT EMPLOYEE_NAME, NVL(SUM(INCOME), 0)			-- 4. INCOME합계가 NULL이면 0으로 바꾼다.
FROM TBL_INCOME TI
RIGHT JOIN TBL_EMPLOYEE TE		-- 1. RIGHT JOIN이라서 RIGHT테이블인 EMPLOYEE테이블은 다 보여주고
ON TI.EMPLOYEE_ID = TE.ID							-- 2. LEFT테이블인 INCOME테이블은 ON절 조건에 맞는 데이터만 보여줌.
GROUP BY EMPLOYEE_NAME;								-- 3. ON절 조건에 따라 매칭되는 값이 없으므로 NULL값이 나오는데,

SELECT EMPLOYEE_NAME, NVL(SUM(INCOME), 0)
FROM TBL_INCOME TI
LEFT JOIN TBL_EMPLOYEE TE
ON TI.EMPLOYEE_ID = TE.ID
GROUP BY EMPLOYEE_NAME;
